plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'

}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.movie"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "TMDB_API_KEY", "\"" + getTmdbApiKey() + "\"")
        buildConfigField("String", "TMDB_BASE_URL", "\"https://api.themoviedb.org/3/\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def material = "1.3.0-rc01"
    def nav_version = "2.3.2"
    def retrofit = "2.9.0"
    def moshi = "1.11.0"
    def rxjava = "3.0.9"
    def rx_android = "3.0.0"
    def timber = "4.7.1"
    def hilt = "2.28-alpha"
    def lifecycle_viewmodel = "1.0.0-alpha02"
    def interceptor = "4.9.0"
    def glide = "4.11.0"
    def drawerlayout = "1.1.1"
    def paging_version = "3.0.0-alpha12"
    def dagger2 = "0.6.0"
    def threetenabp = "1.3.0"
    def test = "3.7.8"
    def mockwebserver = "4.9.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    testImplementation "org.mockito:mockito-core:$test"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation "com.google.android.material:material:$material"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.moshi:moshi:$moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava"
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android"
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$lifecycle_viewmodel"
    kapt "androidx.hilt:hilt-compiler:$lifecycle_viewmodel"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "androidx.drawerlayout:drawerlayout:$drawerlayout"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-rxjava3:$paging_version"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger2"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$dagger2"
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp"


}

def getTmdbApiKey() {
    return project.findProperty("tmdb_api")
}